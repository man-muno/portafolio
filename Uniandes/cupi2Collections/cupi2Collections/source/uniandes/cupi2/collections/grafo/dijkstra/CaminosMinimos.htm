<html>

<head>
<meta http-equiv="Content-Language" content="es-co">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>CUPI2 - Página del Proyecto</title>
<link type="text/css" rel="stylesheet" href="../../../../../../grafo/style/cupi2.css">
</head>

<body>

<table border="1" width="800" id="table1" cellspacing="0" cellpadding="0" style="border-collapse: collapse" bordercolor="#333333">
	<tr>
		<td>
		<table border="0" width="100%" id="table46">
			<tr>
				<td>&nbsp;&nbsp; 
				<img border="0" src="../../../../../../grafo/images/logo.gif" width="200" height="72"></td>
				<td valign="top">
				<p align="right"><a href="../../../../../../grafo/index.htm">Inicio Grafo</a>&nbsp; |&nbsp;
				<a href="../../../../../index.htm">Inicio</a></td>
			</tr>
		</table>
		</td>
	</tr>
	<tr>
		<td class="h1" height="35">
			<h1 class="titulo" align="left">&nbsp;&nbsp;&nbsp;Cupi2 Collections - Estructura 
			Grafo</font></td>
	</tr>
	<tr>
		<td class="h2" height="22"><script language="JavaScript" src="http://cupi2.uniandes.edu.co/cupi2.collections/web/js/menu.js"></script></td>
	</tr>
	<tr>
		<td>
			<table border="0" width="100%" id="table42" cellspacing="0" cellpadding="0">
				<tr>
					<td width="100%" valign="top">
					<table border="0" width="798" id="table44">
					<tr>
							<td width="609" colspan="4" valign="top">&nbsp;&gt;&gt; Estructuras de Datos&gt;
							Grafo &gt;
							Visualización Código Fuente&gt;<b>CaminosMinimos</b></td>
					</tr>
						<tr>
							<td width="609" colspan="4" valign="top">&nbsp;</td>
						</tr>
						<tr>
							<td width="33" valign="top">&nbsp;</td>
							<td width="691" colspan="2" valign="top">
							<a href="../../../../../../grafo/codigo.htm">Regresar</a></td>
							<td width="60" valign="top">&nbsp;</td>
						</tr>
						<tr>
							<td width="609" colspan="4" valign="top">&nbsp;</td>
						</tr>
						<tr>
							<td width="33">&nbsp;</td>
							<td width="531" colspan="2"><p class="titulo">
							CaminosMinimos </td>
							<td width="60">&nbsp;</td>
						</tr>
						<tr>
							<td width="609" colspan="4">&nbsp;</td>
						</tr>
						<tr>
							<td width="33">&nbsp;</td>
							<td width="23">&nbsp;</td>
							<td width="664"><b>Paquete:</b> uniandes.cupi2.collections.grafo.dijkstra<p>

<div align="left" class="java">
<table border="0" cellpadding="3" cellspacing="0" bgcolor="#ffffff">
   <tr>
   <td nowrap="nowrap" valign="top" align="left">
    <code>
<font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;$Id:&nbsp;CaminosMinimos.java,v&nbsp;1.7&nbsp;2007/10/16&nbsp;15:41:44&nbsp;p-marque&nbsp;Exp&nbsp;$</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Universidad&nbsp;de&nbsp;los&nbsp;Andes&nbsp;(Bogot&aacute;&nbsp;-&nbsp;Colombia)</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Departamento&nbsp;de&nbsp;Ingenier&iacute;a&nbsp;de&nbsp;Sistemas&nbsp;y&nbsp;Computaci&oacute;n&nbsp;</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Licenciado&nbsp;bajo&nbsp;el&nbsp;esquema&nbsp;Academic&nbsp;Free&nbsp;License&nbsp;version&nbsp;2.1&nbsp;</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Proyecto&nbsp;Cupi2&nbsp;(http://cupi2.uniandes.edu.co)</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Framework:&nbsp;Cupi2Collections</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Autor:&nbsp;J.&nbsp;Villalobos&nbsp;-&nbsp;Abr&nbsp;21,&nbsp;2006</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff"></font><br>
<font color="#7f0055"><b>package&nbsp;</b></font><font color="#000000">uniandes.cupi2.collections.grafo.dijkstra;</font><br>
<font color="#ffffff"></font><br>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">java.util.*;</font><br>
<font color="#ffffff"></font><br>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">uniandes.cupi2.collections.grafo.*;</font><br>
<font color="#7f0055"><b>import&nbsp;</b></font><font color="#000000">uniandes.cupi2.collections.iterador.*;</font><br>
<font color="#ffffff"></font><br>
<font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*&nbsp;Clase&nbsp;utilizada&nbsp;para&nbsp;el&nbsp;c&aacute;lculo&nbsp;de&nbsp;caminos&nbsp;m&iacute;nimos&nbsp;desde&nbsp;un&nbsp;v&eacute;rtice&nbsp;origen&nbsp;usando&nbsp;el&nbsp;algoritmo&nbsp;de&nbsp;Dijkstra</font><br>
<font color="#ffffff">&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#7f0055"><b>public&nbsp;class&nbsp;</b></font><font color="#000000">CaminosMinimos&lt;K,&nbsp;V&nbsp;</font><font color="#7f0055"><b>extends&nbsp;</b></font><font color="#000000">IVertice&lt;K&gt;,&nbsp;A&nbsp;</font><font color="#7f0055"><b>extends&nbsp;</b></font><font color="#000000">IArco&gt;</font><br>
<font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;-----------------------------------------------------------------</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Atributos</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;-----------------------------------------------------------------</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;V&eacute;rtice&nbsp;origen&nbsp;del&nbsp;camino</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;origen;</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Conjunto&nbsp;de&nbsp;v&eacute;rtices&nbsp;que&nbsp;representan&nbsp;el&nbsp;grafo&nbsp;al&nbsp;que&nbsp;pertenece&nbsp;el&nbsp;v&eacute;rtice&nbsp;origen</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#000000">HashMap&lt;K,&nbsp;NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&gt;&nbsp;nodos;</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Lista&nbsp;de&nbsp;v&eacute;rtices&nbsp;que&nbsp;a&uacute;n&nbsp;no&nbsp;han&nbsp;sido&nbsp;marcados&nbsp;(no&nbsp;se&nbsp;han&nbsp;incluido&nbsp;en&nbsp;el&nbsp;c&aacute;lculo&nbsp;del&nbsp;camino&nbsp;m&iacute;nimo)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>private&nbsp;</b></font><font color="#000000">ArrayList&lt;Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&gt;&nbsp;sinMarcar;</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;-----------------------------------------------------------------</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Constructores</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;-----------------------------------------------------------------</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Constructor&nbsp;de&nbsp;la&nbsp;clase</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">pOrigen&nbsp;V&eacute;rtice&nbsp;a&nbsp;partir&nbsp;del&nbsp;cual&nbsp;se&nbsp;van&nbsp;a&nbsp;calcular&nbsp;los&nbsp;caminos&nbsp;m&iacute;nimos</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">pVertices&nbsp;V&eacute;rtices&nbsp;que&nbsp;hacen&nbsp;parte&nbsp;del&nbsp;grafo&nbsp;al&nbsp;que&nbsp;pertenece&nbsp;el&nbsp;v&eacute;rtice&nbsp;origen</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">CaminosMinimos</font><font color="#000000">(&nbsp;</font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;pOrigen,&nbsp;Collection&lt;Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&gt;&nbsp;pVertices&nbsp;</font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Guarda&nbsp;el&nbsp;origen&nbsp;de&nbsp;todos&nbsp;los&nbsp;caminos&nbsp;m&iacute;nimos</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">origen&nbsp;=&nbsp;pOrigen;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Crea&nbsp;la&nbsp;estructura&nbsp;que&nbsp;representa&nbsp;la&nbsp;informaci&oacute;n&nbsp;del&nbsp;camino&nbsp;m&iacute;nimo&nbsp;asociada&nbsp;con&nbsp;cada&nbsp;v&eacute;rtice</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">nodos&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">HashMap&lt;K,&nbsp;NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&gt;</font><font color="#000000">(&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Crea&nbsp;la&nbsp;estructura&nbsp;que&nbsp;representa&nbsp;el&nbsp;conjunto&nbsp;de&nbsp;v&eacute;rtices&nbsp;sin&nbsp;marcar</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sinMarcar&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">ArrayList&lt;Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&gt;</font><font color="#000000">(&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;nodoInicial&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Recorre&nbsp;los&nbsp;v&eacute;rtices&nbsp;del&nbsp;grafo&nbsp;inicializando&nbsp;las&nbsp;estructuras</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for</b></font><font color="#000000">(&nbsp;</font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;vert&nbsp;:&nbsp;pVertices&nbsp;</font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;nodo&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;</font><font color="#000000">(&nbsp;</font><font color="#000000">vert&nbsp;</font><font color="#000000">)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">nodos.put</font><font color="#000000">(&nbsp;</font><font color="#000000">vert.darId</font><font color="#000000">(&nbsp;)</font><font color="#000000">,&nbsp;nodo&nbsp;</font><font color="#000000">)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if</b></font><font color="#000000">(&nbsp;</font><font color="#000000">!vert.darId</font><font color="#000000">(&nbsp;)</font><font color="#000000">.equals</font><font color="#000000">(&nbsp;</font><font color="#000000">origen.darId</font><font color="#000000">(&nbsp;)&nbsp;)&nbsp;)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sinMarcar.add</font><font color="#000000">(&nbsp;</font><font color="#000000">vert&nbsp;</font><font color="#000000">)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else</b></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">nodoInicial&nbsp;=&nbsp;nodo;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Inicializa&nbsp;la&nbsp;estructura&nbsp;de&nbsp;caminos&nbsp;m&iacute;nimos,&nbsp;definiendo&nbsp;el&nbsp;costo&nbsp;del&nbsp;camino&nbsp;especial&nbsp;hacia&nbsp;todos&nbsp;los&nbsp;sucesores&nbsp;del&nbsp;v&eacute;rtice&nbsp;de&nbsp;partida</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for</b></font><font color="#000000">(&nbsp;</font><font color="#000000">Arco&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;arco&nbsp;:&nbsp;origen.darSucesores</font><font color="#000000">(&nbsp;)&nbsp;)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">asignarCosto</font><font color="#000000">(&nbsp;</font><font color="#000000">arco.darVerticeDestino</font><font color="#000000">(&nbsp;)</font><font color="#000000">.darId</font><font color="#000000">(&nbsp;)</font><font color="#000000">,&nbsp;arco.darPeso</font><font color="#000000">(&nbsp;)</font><font color="#000000">,&nbsp;nodoInicial&nbsp;</font><font color="#000000">)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Inicializa&nbsp;el&nbsp;costo&nbsp;del&nbsp;camino&nbsp;especial&nbsp;al&nbsp;v&eacute;rtice&nbsp;de&nbsp;origen&nbsp;como&nbsp;de&nbsp;costo&nbsp;0</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">asignarCosto</font><font color="#000000">(&nbsp;</font><font color="#000000">origen.darId</font><font color="#000000">(&nbsp;)</font><font color="#000000">,&nbsp;</font><font color="#990000">0</font><font color="#000000">,&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">origen.marcar</font><font color="#000000">(&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;-----------------------------------------------------------------</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;M&eacute;todos</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;-----------------------------------------------------------------</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Asigna&nbsp;el&nbsp;costo&nbsp;m&iacute;nimo&nbsp;entre&nbsp;los&nbsp;dos&nbsp;v&eacute;rtices&nbsp;especificados</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">idVertice&nbsp;El&nbsp;identificador&nbsp;del&nbsp;v&eacute;rtice&nbsp;destino</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">costo&nbsp;El&nbsp;costo&nbsp;entre&nbsp;los&nbsp;dos&nbsp;v&eacute;rtices</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">anterior&nbsp;El&nbsp;v&eacute;rtices&nbsp;origen</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">asignarCosto</font><font color="#000000">(&nbsp;</font><font color="#000000">K&nbsp;idVertice,&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">costo,&nbsp;NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;anterior&nbsp;</font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;nodo&nbsp;=&nbsp;nodos.get</font><font color="#000000">(&nbsp;</font><font color="#000000">idVertice&nbsp;</font><font color="#000000">)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">nodo.asignarCostoMinimo</font><font color="#000000">(&nbsp;</font><font color="#000000">costo,&nbsp;anterior&nbsp;</font><font color="#000000">)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Localiza&nbsp;el&nbsp;v&eacute;rtice&nbsp;no&nbsp;marcado&nbsp;con&nbsp;costo&nbsp;de&nbsp;camino&nbsp;especial&nbsp;m&iacute;nimo,&nbsp;cuyo&nbsp;costo&nbsp;sea&nbsp;distinto&nbsp;de&nbsp;NodoDijkstra.INDEFINIDO,&nbsp;y&nbsp;lo&nbsp;marca.&nbsp;Si&nbsp;no&nbsp;lo&nbsp;encuentra&nbsp;retorna&nbsp;null</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">El&nbsp;siguiente&nbsp;v&eacute;rtice&nbsp;no&nbsp;marcado.&nbsp;Si&nbsp;no&nbsp;se&nbsp;encuentra&nbsp;se&nbsp;retorn&oacute;&nbsp;null</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;darSiguienteVertice</font><font color="#000000">(&nbsp;)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;menorV&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;menorN&nbsp;=&nbsp;</font><font color="#7f0055"><b>null</b></font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for</b></font><font color="#000000">(&nbsp;</font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;vert&nbsp;:&nbsp;sinMarcar&nbsp;</font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;nodo&nbsp;=&nbsp;nodos.get</font><font color="#000000">(&nbsp;</font><font color="#000000">vert.darId</font><font color="#000000">(&nbsp;)&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if</b></font><font color="#000000">(&nbsp;</font><font color="#000000">menorV&nbsp;==&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">&amp;&amp;&nbsp;nodo.darCostoMinimo</font><font color="#000000">(&nbsp;)&nbsp;</font><font color="#000000">!=&nbsp;NodoDijkstra.INDEFINIDO&nbsp;</font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">menorV&nbsp;=&nbsp;vert;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">menorN&nbsp;=&nbsp;nodo;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>else&nbsp;if</b></font><font color="#000000">(&nbsp;</font><font color="#000000">nodo.darCostoMinimo</font><font color="#000000">(&nbsp;)&nbsp;</font><font color="#000000">&lt;&nbsp;menorN.darCostoMinimo</font><font color="#000000">(&nbsp;)&nbsp;)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">menorV&nbsp;=&nbsp;vert;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">menorN&nbsp;=&nbsp;nodo;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">sinMarcar.remove</font><font color="#000000">(&nbsp;</font><font color="#000000">menorV&nbsp;</font><font color="#000000">)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">menorV.marcar</font><font color="#000000">(&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">menorV;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Recalcula&nbsp;todos&nbsp;los&nbsp;caminos&nbsp;especiales&nbsp;de&nbsp;la&nbsp;siguiente&nbsp;manera:&nbsp;para&nbsp;cada&nbsp;sucesor&nbsp;no&nbsp;marcado&nbsp;se&nbsp;debe&nbsp;decidir&nbsp;si&nbsp;resulta&nbsp;mejor&nbsp;el&nbsp;camino&nbsp;antes&nbsp;calculado&nbsp;o&nbsp;si&nbsp;es</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;preferible&nbsp;utilizar&nbsp;el&nbsp;camino&nbsp;especial&nbsp;hasta&nbsp;el&nbsp;v&eacute;rtice&nbsp;que&nbsp;se&nbsp;acaba&nbsp;de&nbsp;incluir&nbsp;(y&nbsp;que&nbsp;llega&nbsp;como&nbsp;par&aacute;metro)&nbsp;y&nbsp;luego&nbsp;utilizar&nbsp;el&nbsp;arco&nbsp;que&nbsp;los&nbsp;une.</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">nuevoVert&nbsp;Nuevo&nbsp;v&eacute;rtice&nbsp;que&nbsp;se&nbsp;acaba&nbsp;de&nbsp;incluir&nbsp;en&nbsp;el&nbsp;camino</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>void&nbsp;</b></font><font color="#000000">recalcularCaminosEspeciales</font><font color="#000000">(&nbsp;</font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;nuevoVert&nbsp;</font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;nuevoNodo&nbsp;=&nbsp;nodos.get</font><font color="#000000">(&nbsp;</font><font color="#000000">nuevoVert.darId</font><font color="#000000">(&nbsp;)&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">costoANuevoVert&nbsp;=&nbsp;nuevoNodo.darCostoMinimo</font><font color="#000000">(&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>for</b></font><font color="#000000">(&nbsp;</font><font color="#000000">Arco&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;arco&nbsp;:&nbsp;nuevoVert.darSucesores</font><font color="#000000">(&nbsp;)&nbsp;)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;vert&nbsp;=&nbsp;arco.darVerticeDestino</font><font color="#000000">(&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if</b></font><font color="#000000">(&nbsp;</font><font color="#000000">!vert.marcado</font><font color="#000000">(&nbsp;)&nbsp;)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;nodo&nbsp;=&nbsp;nodos.get</font><font color="#000000">(&nbsp;</font><font color="#000000">vert.darId</font><font color="#000000">(&nbsp;)&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>if</b></font><font color="#000000">(&nbsp;</font><font color="#000000">nodo.darCostoMinimo</font><font color="#000000">(&nbsp;)&nbsp;</font><font color="#000000">&gt;&nbsp;costoANuevoVert&nbsp;+&nbsp;arco.darPeso</font><font color="#000000">(&nbsp;)&nbsp;)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">nodo.asignarCostoMinimo</font><font color="#000000">(&nbsp;</font><font color="#000000">costoANuevoVert&nbsp;+&nbsp;arco.darPeso</font><font color="#000000">(&nbsp;)</font><font color="#000000">,&nbsp;nuevoNodo&nbsp;</font><font color="#000000">)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Retorna&nbsp;el&nbsp;costo&nbsp;del&nbsp;camino&nbsp;m&iacute;nimo&nbsp;que&nbsp;parte&nbsp;del&nbsp;origen&nbsp;y&nbsp;llega&nbsp;al&nbsp;v&eacute;rtice&nbsp;que&nbsp;se&nbsp;recibe&nbsp;como&nbsp;par&aacute;metro.&nbsp;Si&nbsp;no&nbsp;existe&nbsp;dicho&nbsp;camino,&nbsp;retorna&nbsp;-1.</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">vertice&nbsp;V&eacute;rtice&nbsp;destino</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">Costo&nbsp;del&nbsp;camino&nbsp;m&iacute;nimo&nbsp;desde&nbsp;el&nbsp;nodo&nbsp;origen&nbsp;al&nbsp;nodo&nbsp;destino.&nbsp;Si&nbsp;no&nbsp;existe&nbsp;el&nbsp;camino&nbsp;se&nbsp;retorna&nbsp;-1</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">darCostoCamino</font><font color="#000000">(&nbsp;</font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;vertice&nbsp;</font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;nodo&nbsp;=&nbsp;nodos.get</font><font color="#000000">(&nbsp;</font><font color="#000000">vertice.darId</font><font color="#000000">(&nbsp;)&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>int&nbsp;</b></font><font color="#000000">costo&nbsp;=&nbsp;nodo.darCostoMinimo</font><font color="#000000">(&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">costo&nbsp;==&nbsp;NodoDijkstra.INDEFINIDO&nbsp;?&nbsp;-</font><font color="#990000">1&nbsp;</font><font color="#000000">:&nbsp;costo;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff"></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">/**</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;Devuelve&nbsp;los&nbsp;v&eacute;rtices&nbsp;por&nbsp;los&nbsp;cuales&nbsp;pasa&nbsp;el&nbsp;camino&nbsp;m&iacute;nimo&nbsp;que&nbsp;lleva&nbsp;del&nbsp;origen&nbsp;al&nbsp;v&eacute;rtice&nbsp;que&nbsp;se&nbsp;recibe&nbsp;como&nbsp;par&aacute;metro.</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@param&nbsp;</font><font color="#3f5fbf">vertice&nbsp;El&nbsp;v&eacute;rtice&nbsp;destino</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*&nbsp;</font><font color="#7f9fbf">@return&nbsp;</font><font color="#3f5fbf">Iterador&nbsp;sobre&nbsp;los&nbsp;v&eacute;rtices</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f5fbf">*/</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>public&nbsp;</b></font><font color="#000000">Iterador&lt;Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&gt;&nbsp;darCaminoMinimo</font><font color="#000000">(&nbsp;</font><font color="#000000">Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;vertice&nbsp;</font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">NodoDijkstra&lt;K,&nbsp;V,&nbsp;A&gt;&nbsp;nodo&nbsp;=&nbsp;nodos.get</font><font color="#000000">(&nbsp;</font><font color="#000000">vertice.darId</font><font color="#000000">(&nbsp;)&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">IteradorSimple&lt;Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&gt;&nbsp;itera&nbsp;=&nbsp;</font><font color="#7f0055"><b>new&nbsp;</b></font><font color="#000000">IteradorSimple&lt;Vertice&lt;K,&nbsp;V,&nbsp;A&gt;&gt;</font><font color="#000000">(&nbsp;</font><font color="#000000">nodos.size</font><font color="#000000">(&nbsp;)&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>try</b></font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>while</b></font><font color="#000000">(&nbsp;</font><font color="#000000">nodo&nbsp;!=&nbsp;</font><font color="#7f0055"><b>null&nbsp;</b></font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">itera.insertar</font><font color="#000000">(&nbsp;</font><font color="#000000">nodo.darVertice</font><font color="#000000">(&nbsp;)&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">nodo&nbsp;=&nbsp;nodo.darPredecesor</font><font color="#000000">(&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>catch</b></font><font color="#000000">(&nbsp;</font><font color="#000000">IteradorException&nbsp;e&nbsp;</font><font color="#000000">)</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">{</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#3f7f5f">//&nbsp;Nunca&nbsp;deber&iacute;a&nbsp;aparecer&nbsp;esta&nbsp;excepci&oacute;n</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">e.printStackTrace</font><font color="#000000">(&nbsp;)</font><font color="#000000">;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#7f0055"><b>return&nbsp;</b></font><font color="#000000">itera;</font><br>
<font color="#ffffff">&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#000000">}</font><br>
<font color="#000000">}</font></code>
    
   </td>
   </tr>
</table>
</div>
</td>
							<td width="60">&nbsp;</td>
						</tr>
						<tr>
							<td width="33">&nbsp;</td>
							<td width="23">&nbsp;</td>
							<td width="664">&nbsp;</td>
							<td width="60">&nbsp;</td>
						</tr>
						<tr>
							<td width="33">&nbsp;</td>
							<td width="527" colspan="2">
							<a href="../../../../../../grafo/codigo.htm">Regresar</a></td>
							<td width="60">&nbsp;</td>
						</tr>
						<tr>
							<td width="33">&nbsp;</td>
							<td width="527" colspan="2">&nbsp;
							</td>
							<td width="60">&nbsp;</td>
						</tr>
					</table>
					</td>
				</tr>
			</table>
		</td>
	</tr>
	</table>
<table border="0" width="800" cellspacing="0" cellpadding="0" id="table6">
	<tr>
		<td width="65">
		<p align="center"><a href="http://www.uniandes.edu.co/">
		<img border="0" src="../../../../../images/logo_uniandes.gif" width="44" height="50"></a></td>
		<td>Copyright © 2006, <b>Universidad de los Andes</b>. Todos los derechos 
			reservados<b>.<br>
			</b>Cupi2Collections - <a href="http://sistemas.uniandes.edu.co/">Departamento de Ingeniería de Sistemas y Computación.</a><br>
		<b>2006</b></td>
	</tr>
</table>

<script language="JavaScript" src="http://cupi2.uniandes.edu.co/cupi2.collections/web/js/menu_general.js"></script>
</body>

</html>