package uniandes.cumbia.bpel.elements.pick.onmessage;

import uniandes.cumbia.bpel.elements.Interaction;
import uniandes.cumbia.openobjects.execution.events.generators.EventGenerator;
import uniandes.cumbia.openobjects.execution.instance.ModelInstance;


public abstract class AbstractOnMessage extends Interaction implements IOnMessage
{
    
    // -----------------------------------------------------------------
    // Constants
    // -----------------------------------------------------------------
    
    private static final String ACTIVATE_ON_MESSAGE = "activate";
    
    private static final String MESSAGE_RECEIVED_ON_MESSAGE = "messageReceived";
    
    // -----------------------------------------------------------------
    // Attributes
    // -----------------------------------------------------------------
    
    /**
     * Generator of the event initialize
     */
    private EventGenerator generatorActivate;
   
    /**
     * Generator of the event finalize
     */
    private EventGenerator generatorMessageReceived;
    
    
    // -----------------------------------------------------------------
    // Methods
    // -----------------------------------------------------------------
    
    /**
     * 
     */
    public AbstractOnMessage( ModelInstance modelInstance, String elementName, String typeName )
    {
        super( modelInstance, elementName, typeName );
    }
    
    /**
     * 
     */
    public AbstractOnMessage( ModelInstance modelInstance, String elementName )
    {
        super( modelInstance, elementName, TYPE_ON_MESSAGE);
    }
    
    
    /**
     * This method registers in the EventsManager of the element, all the events that are generated by this entity.<br>
     * This method also creates the generators for the entity's events
     */
    public void registerGeneratedEvents()
    {
        generatorMessageReceived = createAndRegisterEventGenerator(MESSAGE_RECEIVED_ON_MESSAGE);
        generatorActivate = createAndRegisterEventGenerator(ACTIVATE_ON_MESSAGE);
    }
    
    /**
     * Generates the message received event
     */
    protected void messageReceived()
    {
        generatorMessageReceived.generate( );
    }
    
    /**
     * Fires the event activate
     */
    protected void activateOnMessage()
    {
        generatorActivate.generate( );
    }
}
