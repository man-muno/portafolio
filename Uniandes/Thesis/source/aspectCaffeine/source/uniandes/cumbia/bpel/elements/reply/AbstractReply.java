package uniandes.cumbia.bpel.elements.reply;

import uniandes.cumbia.bpel.elements.Interaction;
import uniandes.cumbia.openobjects.execution.events.generators.EventGenerator;
import uniandes.cumbia.openobjects.execution.instance.ModelInstance;

public abstract class AbstractReply extends Interaction implements IReply
{

    // -----------------------------------------------------------------
    // Constants
    // -----------------------------------------------------------------

    private static final String SEND_REPLY  = "send";
    
    private static final String REINIT = "reInit";


    // -----------------------------------------------------------------
    // Attributes
    // -----------------------------------------------------------------

    /**
     * Generator of the event activate
     */
    private EventGenerator generatorSend;
    
    /**
     * Generator of the event reInit
     */
    private EventGenerator generatorReInit;

    // -----------------------------------------------------------------
    // Methods
    // -----------------------------------------------------------------

    /**
     * 
     */
    public AbstractReply( ModelInstance modelInstance, String elementName, String typeName )
    {
        super( modelInstance, elementName, typeName );
    }

    /**
     * 
     */
    public AbstractReply( ModelInstance modelInstance, String elementName )
    {
        super( modelInstance, elementName, TYPE_REPLY );
    }

    /**
     * This method registers in the EventsManager of the element, all the events that are generated by this entity.<br>
     * This method also creates the generators for the entity's events
     */
    public void registerGeneratedEvents( )
    {
        generatorSend = createAndRegisterEventGenerator( SEND_REPLY  );
        generatorReInit = createAndRegisterEventGenerator( REINIT );
    }

    protected void sendMessage( )
    {
        generatorSend.generate( );
    }
    

    /**
     * Fires the reInit event
     */
    protected void reInitReply()
    {
        generatorReInit.generate( );
    }
}
