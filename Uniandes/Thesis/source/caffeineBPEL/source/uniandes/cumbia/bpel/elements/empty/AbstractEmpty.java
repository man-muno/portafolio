package uniandes.cumbia.bpel.elements.empty;

import uniandes.cumbia.openobjects.elements.OpenObject;
import uniandes.cumbia.openobjects.execution.events.generators.EventGenerator;
import uniandes.cumbia.openobjects.execution.instance.ModelInstance;


public abstract class AbstractEmpty extends OpenObject implements IEmpty
{

    // -----------------------------------------------------------------
    // Constants
    // -----------------------------------------------------------------
    
    private static final String EMPTY_FINALIZED = "finalized";
    
    private static final String REINIT = "reInit";
    
    // -----------------------------------------------------------------
    // Attributes
    // -----------------------------------------------------------------
  
    /**
     * Generator of the event finalized
     */
    private EventGenerator generatorFinalized;
    
    /**
     * Generator of the event reInit
     */
    private EventGenerator generatorReInit;

    
    // -----------------------------------------------------------------
    // Constructor
    // -----------------------------------------------------------------

    /**
     * 
     */
    public AbstractEmpty( ModelInstance modelInstance, String elementName, String typeName )
    {
        super( modelInstance, elementName, typeName );
    }
    
    /**
     * 
     */
    public AbstractEmpty( ModelInstance modelInstance, String elementName )
    {
        super( modelInstance, elementName, TYPE_EMPTY);
    }
   
    
    // -----------------------------------------------------------------
    // Methods
    // -----------------------------------------------------------------
    
    /**
     * This method registers in the EventsManager of the element, all the events that are generated by this entity.<br>
     * This method also creates the generators for the entity's events
     */
    public void registerGeneratedEvents()
    {
        generatorFinalized= createAndRegisterEventGenerator(EMPTY_FINALIZED);
        generatorReInit = createAndRegisterEventGenerator( REINIT );
    }
    

    
    /**
     * Returns the count of the elements. This helps to figure out the amount of elements inside elements like a scope or a flow
     * @return the amount of elements inside the element
     */
    public int getElementCount( )
    {
        return 1;
    }

    /**
     * Generates the finalized event
     */
    protected void finalizedEmpty( )
    {
        generatorFinalized.generate( );
    }
    
    /**
     * Fires the reInit event
     */
    protected void reInitEmpty()
    {
        generatorReInit.generate( );
    }
}

