package uniandes.cumbia.bpel.elements.invoke;

import uniandes.cumbia.bpel.elements.Interaction;
import uniandes.cumbia.openobjects.execution.events.generators.EventGenerator;
import uniandes.cumbia.openobjects.execution.instance.ModelInstance;

public abstract class AbstractInvoke extends Interaction implements IInvoke
{   
    
    // -----------------------------------------------------------------
    // Constants
    // -----------------------------------------------------------------
    
    private static final String SEND_MESSAGE_INVOKE = "sendMessage";
    
    private static final String WAIT_RESPONSE_INVOKE = "waitResponse";
    
    private static final String MESSAGE_RECEIVED_INVOKE = "messageReceived";
    
    private static final String INVOKE_FINALIZED = "finalized";
    
    private static final String REINIT = "reInit";
    
    // -----------------------------------------------------------------
    // Attributes
    // -----------------------------------------------------------------
    
    /**
     * Generator of the event initialize
     */
    private EventGenerator generatorSendMessage;
    
    /**
     * Generator of the event activate
     */
    private EventGenerator generatorWaitResponse;
    
    /**
     * Generator of the event finalize
     */
    private EventGenerator generatorMessageReceived;
    
    /**
     * Generator of the event finalized
     */
    private EventGenerator generatorFinalized;
    
    /**
     * Generator of the event reInit
     */
    private EventGenerator generatorReInit;
    
    
    // -----------------------------------------------------------------
    // Methods
    // -----------------------------------------------------------------
    
    /**
     * 
     */
    public AbstractInvoke( ModelInstance modelInstance, String elementName, String typeName )
    {
        super( modelInstance, elementName, typeName );
    }
    
    /**
     * 
     */
    public AbstractInvoke( ModelInstance modelInstance, String elementName )
    {
        super( modelInstance, elementName, TYPE_INVOKE);
    }

    
    /**
     * This method registers in the EventsManager of the element, all the events that are generated by this entity.<br>
     * This method also creates the generators for the entity's events
     */
    public void registerGeneratedEvents()
    {
        generatorSendMessage = createAndRegisterEventGenerator(SEND_MESSAGE_INVOKE);
        generatorMessageReceived = createAndRegisterEventGenerator(MESSAGE_RECEIVED_INVOKE);
        generatorWaitResponse = createAndRegisterEventGenerator(WAIT_RESPONSE_INVOKE);
        generatorFinalized = createAndRegisterEventGenerator(INVOKE_FINALIZED);
        generatorReInit = createAndRegisterEventGenerator( REINIT );
    }
    
    /**
     * Fires the reInit event
     */
    protected void reInitInvoke()
    {
        generatorReInit.generate( );
    }
    
    /**
     * Generates de send message event
     */
    public void sendMessage()
    {
        generatorSendMessage.generate( );
    }
    
    /**
     * Generates the message received event
     */
    protected void messageReceived()
    {
        generatorMessageReceived.generate( );
    }
    
    /**
     * Generates the message wait response
     */
    protected void waitResponseInvoke()
    {
        generatorWaitResponse.generate( );
    }
    
    /**
     * Generates the message finalized
     */
    protected void finalizedInvoke()
    {
        generatorFinalized.generate( );
    }
}
