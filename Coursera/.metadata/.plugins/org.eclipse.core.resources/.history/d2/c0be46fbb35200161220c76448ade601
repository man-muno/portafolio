package week4;

import java.util.*;

public class PrimitiveCalculator {

	private static int[] resp;

	private static int optimal_sequence2(int n) {
		
		if(resp[n]>=0)
			return resp[n];
		
		int i = 1;
		while (i<=n) {
			if (i % 3 == 0) {
				resp[i] = 1;     
            } else if (i % 2 == 0) {
            	resp[i] = 1;
            } else {
            	resp[i] = 1;
            }
        }
		
		return 0;
	}

	private static List<Integer> optimal_sequence(int n) {
		List<Integer> sequence = new ArrayList<Integer>();
		while (n >= 1) {
			sequence.add(n);
			if (n % 3 == 0) {
				n /= 3;
			} else if (n % 2 == 0) {
				n /= 2;
			} else {
				n -= 1;
			}
		}
		Collections.reverse(sequence);
		return sequence;
	}

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int n = scanner.nextInt();
		resp = new int[n];
		resp[0] = 0;
		optimal_sequence2(n);
		/*System.out.println(sequence.size() - 1);
		for (Integer x : sequence) {
			System.out.print(x + " ");
		}*/
	}

	public class Segment {

		private int from;

		private int number;

		public Segment(int number, int from) {
			this.number = number;
			this.from = from;
		}

	}

}
